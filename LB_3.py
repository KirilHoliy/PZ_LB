import sqlite3
import hashlib
import os

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î (—Å—Ç–≤–æ—Ä–∏—Ç—å —Ñ–∞–π–ª, —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î)
DB_FILE = "users.db"
conn = sqlite3.connect(DB_FILE)
cursor = conn.cursor()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ, —è–∫—â–æ –≤–æ–Ω–∞ –Ω–µ —ñ—Å–Ω—É—î
cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        login TEXT PRIMARY KEY,
        password TEXT NOT NULL,
        full_name TEXT NOT NULL
    )
''')
conn.commit()

# –•–µ—à—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è (SHA-256)
def hash_password(password):
    return hashlib.sha256(password.encode()).hexdigest()

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def add_user():
    print("\n=== –î–û–î–ê–í–ê–ù–ù–Ø –ö–û–†–ò–°–¢–£–í–ê–ß–ê ===")
    login = input("–õ–æ–≥—ñ–Ω: ").strip()
    full_name = input("–ü–Ü–ë: ").strip()
    password = input("–ü–∞—Ä–æ–ª—å: ").strip()

    if not login or not full_name or not password:
        print("‚ùå –í—Å—ñ –ø–æ–ª—è –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ!")
        return

    hashed = hash_password(password)

    try:
        cursor.execute("INSERT INTO users (login, password, full_name) VALUES (?, ?, ?)",
                       (login, hashed, full_name))
        conn.commit()
        print("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")
    except sqlite3.IntegrityError:
        print("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–∏–º –ª–æ–≥—ñ–Ω–æ–º –≤–∂–µ —ñ—Å–Ω—É—î.")

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
def update_password():
    print("\n=== –û–ù–û–í–õ–ï–ù–ù–Ø –ü–ê–†–û–õ–Ø ===")
    login = input("–õ–æ–≥—ñ–Ω: ").strip()
    new_password = input("–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å: ").strip()

    if not login or not new_password:
        print("‚ùå –£—Å—ñ –ø–æ–ª—è –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ!")
        return

    new_hash = hash_password(new_password)
    cursor.execute("UPDATE users SET password = ? WHERE login = ?", (new_hash, login))
    if cursor.rowcount == 0:
        print("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    else:
        conn.commit()
        print("‚úÖ –ü–∞—Ä–æ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
def authenticate():
    print("\n=== –í–•–Ü–î –î–û –°–ò–°–¢–ï–ú–ò ===")
    login = input("–õ–æ–≥—ñ–Ω: ").strip()
    password = input("–ü–∞—Ä–æ–ª—å: ").strip()
    password_hash = hash_password(password)

    cursor.execute("SELECT full_name FROM users WHERE login = ? AND password = ?", (login, password_hash))
    result = cursor.fetchone()

    if result:
        print(f"‚úÖ –£—Å–ø—ñ—à–Ω–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è. –í—ñ—Ç–∞—î–º–æ, {result[0]}!")
    else:
        print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å.")

# –û—Å–Ω–æ–≤–Ω–µ –º–µ–Ω—é
def main_menu():
    while True:
        print("\n--- –ú–ï–ù–Æ ---")
        print("1. –î–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        print("2. –û–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–æ–ª—å")
        print("3. –£–≤—ñ–π—Ç–∏")
        print("4. –í–∏—Ö—ñ–¥")
        choice = input("–í–∞—à –≤–∏–±—ñ—Ä (1-4): ").strip()

        if choice == "1":
            add_user()
        elif choice == "2":
            update_password()
        elif choice == "3":
            authenticate()
        elif choice == "4":
            print("üëã –í–∏—Ö—ñ–¥ —ñ–∑ –ø—Ä–æ–≥—Ä–∞–º–∏. –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            break
        else:
            print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –í–≤–µ–¥—ñ—Ç—å —Ü–∏—Ñ—Ä—É 1-4.")

if __name__ == "__main__":
    main_menu()
    conn.close()
