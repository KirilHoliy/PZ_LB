def analyze_log_file(log_file_path):
   try:
       result_dict = {}
       with open(log_file_path) as file:
           for line in file:
               split_list = line.split()


               # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: —á–∏ —î –≤ —Ä—è–¥–∫—É —Å—Ç–∞—Ç—É—Å-–∫–æ–¥
               if len(split_list) > 8:
                   status_code = split_list[8]
                   if status_code.isdigit():  # –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ —Ü–µ —á–∏—Å–ª–æ
                       if status_code in result_dict:
                           result_dict[status_code] += 1
                       else:
                           result_dict[status_code] = 1
               else:
                   print("‚ö†Ô∏è –†—è–¥–æ–∫ –Ω–∞–¥—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π –∞–±–æ –º–∞—î –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É:", line.strip())


   except FileNotFoundError:
       print("‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
       result_dict = {}
   except IOError:
       print("‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É.")
       result_dict = {}


   return result_dict




# ‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó
path_to_log_file = "C:\\Users\\Dell\\Downloads\\apache_logs.txt"  # (–¥–æ–¥–∞–Ω–æ .txt —ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–ª–µ—à—ñ)
res = analyze_log_file(path_to_log_file)
print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ HTTP-–∫–æ–¥—ñ–≤:", res)
